[gd_resource type="VisualShader" load_steps=3 format=2]

[sub_resource type="VisualShaderNodeTextureUniform" id=8]
uniform_name = "TextureUniform"

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "albedo"

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible;

uniform sampler2D TextureUniform;



void vertex() {
// Output:0

}

void fragment() {
// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// Output:0
	ALBEDO = n_out2p0;

}

void light() {
// Input:2
	vec3 n_out2p0 = ALBEDO;

// Output:0
	DIFFUSE_LIGHT = n_out2p0;

}
"
nodes/fragment/2/node = SubResource( 8 )
nodes/fragment/2/position = Vector2( 20, 180 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0 )
nodes/light/2/node = SubResource( 10 )
nodes/light/2/position = Vector2( -189.734, 198.84 )
nodes/light/connections = PoolIntArray( 2, 0, 0, 0 )
